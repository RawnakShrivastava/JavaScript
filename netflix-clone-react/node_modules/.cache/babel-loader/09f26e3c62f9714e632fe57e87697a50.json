{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshrivastava\\\\workspace\\\\js\\\\netflix-clone-react\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport Expanded from \"./Expanded\";\nimport ScrollTo from \"react-scroll-to\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'http://image.tmdb.org/t/p/original';\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [currentAsset, setCurrentAsset] = useState([]);\n  const [isExpanded, setIsExpanded] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, []);\n\n  function expand(movie) {\n    setCurrentAsset(movie);\n    setIsExpanded(!isExpanded); // console.log(window.pageYOffset);\n    // window.scrollTo(0,current.offsetTop);\n  } // console.log(movies);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"row_title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(ScrollTo, {\n        children: scroll => {\n          /*#__PURE__*/\n          _jsxDEV(\"img\", {\n            id: movie.id,\n            className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n            src: `${base_url}${!isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n            alt: movie.name // onClick={() => expand(movie)}\n            ,\n            onClick: () => scroll(0, 500)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(Expanded, {\n      className: \"panel_expanded\",\n      currPoster: currentAsset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"RzRT1dWPa5qSSVJ2PZMTCGCes9Q=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/rshrivastava/workspace/js/netflix-clone-react/src/Row.js"],"names":["React","useState","useEffect","axios","Expanded","ScrollTo","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","currentAsset","setCurrentAsset","isExpanded","setIsExpanded","fetchData","request","get","data","results","expand","movie","map","scroll","id","poster_path","backdrop_path","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAsB,iBAAtB;;AAIA,MAAMC,QAAQ,GAAG,oCAAjB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAiBC,EAAAA;AAAjB,CAAb,EAA2C;AAAA;;AACvC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACY,YAAD,EAAcC,eAAd,IAAiCb,QAAQ,CAAC,EAAD,CAA/C;AACA,QAAM,CAACc,UAAD,EAAYC,aAAZ,IAA6Bf,QAAQ,CAAC,KAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAee,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAUV,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACM,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;;AASA,WAASK,MAAT,CAAgBC,KAAhB,EAAsB;AAClBT,IAAAA,eAAe,CAACS,KAAD,CAAf;AACAP,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb,CAFkB,CAGlB;AACA;AACH,GAnBsC,CAoBvC;;;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BP;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,gBACKG,MAAM,CAACa,GAAP,CAAWD,KAAK,iBACb,QAAC,QAAD;AAAA,kBAESE,MAAD,IAAY;AACR;AAAA;AACA,YAAA,EAAE,EAAEF,KAAK,CAACG,EADV;AAGA,YAAA,SAAS,EAAG,cAAahB,UAAU,IAAI,iBAAkB,EAHzD;AAIA,YAAA,GAAG,EAAG,GAAEJ,QAAS,GAAE,CAACI,UAAD,GAAca,KAAK,CAACI,WAApB,GAAkCJ,KAAK,CAACK,aAAc,EAJzE;AAKA,YAAA,GAAG,EAAEL,KAAK,CAACM,IALX,CAMA;AANA;AAOA,YAAA,OAAO,EAAE,MAAMJ,MAAM,CAAC,CAAD,EAAG,GAAH;AAPrB,aAEKF,KAAK,CAACG,EAFX;AAAA;AAAA;AAAA;AAAA;AASH;AAZT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAuBKX,UAAU,iBAAI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,gBAApB;AAAqC,MAAA,UAAU,EAAEF;AAAjD;AAAA;AAAA;AAAA;AAAA,YAvBnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH;;GAhDQN,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import React, { useState , useEffect } from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport Expanded from \"./Expanded\";\r\nimport ScrollTo  from \"react-scroll-to\";\r\n\r\n\r\n\r\nconst base_url = 'http://image.tmdb.org/t/p/original'\r\n\r\nfunction Row({title, fetchUrl,isLargeRow}) {\r\n    const [movies,setMovies] = useState([]);\r\n    const [currentAsset,setCurrentAsset] = useState([]);\r\n    const [isExpanded,setIsExpanded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    function expand(movie){\r\n        setCurrentAsset(movie);\r\n        setIsExpanded(!isExpanded); \r\n        // console.log(window.pageYOffset);\r\n        // window.scrollTo(0,current.offsetTop);\r\n    }\r\n    // console.log(movies);\r\n    return (\r\n        <div>\r\n            <h2 className=\"row_title\">{title}</h2>\r\n            <div className = \"row_posters\">\r\n                {movies.map(movie => (\r\n                    <ScrollTo>\r\n                        {\r\n                            (scroll) => {\r\n                                <img \r\n                                id={movie.id}\r\n                                key={movie.id}\r\n                                className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                                src={`${base_url}${!isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                                alt={movie.name}\r\n                                // onClick={() => expand(movie)}\r\n                                onClick={() => scroll(0,500)}\r\n                            />   \r\n                            }\r\n                        }\r\n                      \r\n                    </ScrollTo>\r\n                   \r\n                ))}\r\n            </div>\r\n            {isExpanded && <Expanded className=\"panel_expanded\" currPoster={currentAsset} />}                       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}