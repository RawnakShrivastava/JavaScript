{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rshrivastava\\\\workspace\\\\js\\\\netflix-clone-react\\\\src\\\\Row.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from './axios';\nimport \"./Row.css\";\nimport Expanded from \"./Expanded\";\nimport requests from './Requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst base_url = 'http://image.tmdb.org/t/p/original';\n\nfunction Row({\n  title,\n  fetchUrl,\n  isLargeRow\n}) {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isExpanded, setIsExpanded] = useState(false);\n  var currentAsset = {};\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(fetchUrl);\n      setMovies(request.data.results);\n      return request;\n    }\n\n    fetchData();\n  }, []);\n\n  function expand(text) {\n    console.log(text);\n    setIsExpanded(!isExpanded);\n  } // console.log(movies);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"row_title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row_posters\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n        id: movie.id,\n        className: `row_poster ${isLargeRow && \"row_posterLarge\"}`,\n        src: `${base_url}${!isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n        alt: movie.name,\n        onClick: expand('asdf')\n      }, movie.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), isExpanded && /*#__PURE__*/_jsxDEV(Expanded, {\n      className: \"panel_expanded\",\n      isOpen: isExpanded,\n      currPoster: currentAsset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Row, \"pxaRHHKD0O1/X5KtYgdOegQb33M=\");\n\n_c = Row;\nexport default Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["C:/Users/rshrivastava/workspace/js/netflix-clone-react/src/Row.js"],"names":["React","useState","useEffect","axios","Expanded","requests","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","isExpanded","setIsExpanded","currentAsset","fetchData","request","get","data","results","expand","text","console","log","map","movie","id","poster_path","backdrop_path","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAQ,GAAG,oCAAjB;;AAEA,SAASC,GAAT,CAAa;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAiBC,EAAAA;AAAjB,CAAb,EAA2C;AAAA;;AACvC,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBX,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACY,UAAD,EAAYC,aAAZ,IAA6Bb,QAAQ,CAAC,KAAD,CAA3C;AACA,MAAIc,YAAY,GAAG,EAAnB;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAec,SAAf,GAA0B;AACtB,YAAMC,OAAO,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUT,QAAV,CAAtB;AACAG,MAAAA,SAAS,CAACK,OAAO,CAACE,IAAR,CAAaC,OAAd,CAAT;AACA,aAAOH,OAAP;AACH;;AACDD,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;;AAUA,WAASK,MAAT,CAAgBC,IAAhB,EAAqB;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,IAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACH,GAlBsC,CAoBvC;;;AACA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BL;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,gBACKG,MAAM,CAACc,GAAP,CAAWC,KAAK,iBACb;AACI,QAAA,EAAE,EAAEA,KAAK,CAACC,EADd;AAGI,QAAA,SAAS,EAAG,cAAajB,UAAU,IAAI,iBAAkB,EAH7D;AAII,QAAA,GAAG,EAAG,GAAEJ,QAAS,GAAE,CAACI,UAAD,GAAcgB,KAAK,CAACE,WAApB,GAAkCF,KAAK,CAACG,aAAc,EAJ7E;AAKI,QAAA,GAAG,EAAEH,KAAK,CAACI,IALf;AAMI,QAAA,OAAO,EAAET,MAAM,CAAC,MAAD;AANnB,SAESK,KAAK,CAACC,EAFf;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ,EAcKd,UAAU,iBAAI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAC,gBAApB;AAAqC,MAAA,MAAM,EAAEA,UAA7C;AAAyD,MAAA,UAAU,EAAEE;AAArE;AAAA;AAAA;AAAA;AAAA,YAdnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAvCQR,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import React, { useState , useEffect } from 'react';\r\nimport axios from './axios';\r\nimport \"./Row.css\";\r\nimport Expanded from \"./Expanded\";\r\nimport requests from './Requests';\r\n\r\nconst base_url = 'http://image.tmdb.org/t/p/original'\r\n\r\nfunction Row({title, fetchUrl,isLargeRow}) {\r\n    const [movies,setMovies] = useState([]);\r\n    const [isExpanded,setIsExpanded] = useState(false);\r\n    var currentAsset = {};\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(fetchUrl);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    \r\n    function expand(text){\r\n        console.log(text);\r\n        setIsExpanded(!isExpanded); \r\n    }\r\n \r\n    // console.log(movies);\r\n    return (\r\n        <div>\r\n            <h2 className=\"row_title\">{title}</h2>\r\n            <div className = \"row_posters\">\r\n                {movies.map(movie => (\r\n                    <img \r\n                        id={movie.id}\r\n                        key={movie.id}\r\n                        className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                        src={`${base_url}${!isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n                        alt={movie.name}\r\n                        onClick={expand('asdf')}\r\n                    />\r\n                ))}\r\n            </div>\r\n            {isExpanded && <Expanded className=\"panel_expanded\" isOpen={isExpanded} currPoster={currentAsset} />}                       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n"]},"metadata":{},"sourceType":"module"}